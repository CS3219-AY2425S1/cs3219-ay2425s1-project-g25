# Database Connection String Variables
DATABASE_NAME=peerprepUserServiceDB

# Port to run service on
PORT=3001

# Cloud MongoDB URI
DB_CLOUD_URI=<your-cloud-mongodb-uri>

# Environment
ENV=production

# Secrets for creating JWT signatures
JWT_ACCESS_TOKEN_SECRET=d2636f0c0ce9119c4aca178220a3a5a7bba0e5f6dffa982f8095f5b566162029
JWT_REFRESH_TOKEN_SECRET=65863c16dc76d23f06668c12b9223f93cb25f4f2c9f0919ba3330000abaa9253
JWT_RESET_TOKEN_SECRET=70468fdf0966eaf0769cbd17f3348cf3debd9a47ac8b85dbee9aff3ebd5d074c

# If using mongoDB containerization, set to true. Else set to false (i.e local testing)
DB_REQUIRE_AUTH=true

# mongoDB auth variables
MONGO_USER=user
MONGO_PASSWORD=password
MONGO_INITDB_ROOT_USERNAME=admin # must match docker-compose.yml and init-mongo.js
MONGO_INITDB_ROOT_PASSWORD=password # must match docker-compose.yml and init-mongo.js

# mongoDB connection string variables
DB_HOST=localhost
DB_PORT=27017

# redis connection string variables
REDIS_HOST=localhost
REDIS_PORT=6379

# Service database names
PEERPREP_QUESTION_INITDB_NAME=peerprepQuestionServiceDB # must match question service .env file and init-mongo.js
PEERPREP_USER_INITDB_NAME=peerprepUserServiceDB # must match user service .env file and init-mongo.js
PEERPREP_MATCHING_INITDB_NAME=peerprepMatchingServiceDB # must match user service .env file and init-mongo.js

# SMTP configs for email
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=peerprep25@gmail.com
SMTP_PASSWORD=scdqcveqpurzzajj

# App URL 
APP_URL=http://localhost:3000

# Feature flags
DEFAULT_ADMIN_ON_REGISTER_FEATURE=true